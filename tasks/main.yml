---
- name: Discover if there is already a version of beanstalkd installed.
  shell: which beanstalkd > /dev/null && beanstalkd -v | cut -d' ' -f2
  changed_when: False
  failed_when: False
  register: installed_beanstalkd_version

- name: Install development tools.
  yum: name=gcc,cpp,gcc-c++,make state=latest

- name: Get tarfile.
  get_url: url=https://github.com/kr/beanstalkd/archive/v{{ beanstalkd_version }}.tar.gz dest=/tmp/beanstalkd-{{ beanstalkd_version }}.tar.gz
  when: installed_beanstalkd_version.stdout != beanstalkd_version

- name: Unarchive.
  command: tar -zxvf /tmp/beanstalkd-{{ beanstalkd_version }}.tar.gz chdir=/tmp creates=/tmp/beanstalkd-{{ beanstalkd_version }}
  when: installed_beanstalkd_version.stdout != beanstalkd_version

- name: Make.
  command: make chdir=/tmp/beanstalkd-{{ beanstalkd_version }}/ creates=/tmp/beanstalkd-{{ beanstalkd_version }}/beanstalkd
  when: installed_beanstalkd_version.stdout != beanstalkd_version

- name: Install
  command: cp -f /tmp/beanstalkd-{{ beanstalkd_version }}/beanstalkd /usr/local/bin/beanstalkd 
  when: installed_beanstalkd_version.stdout != beanstalkd_version  

- name: Ensure startup systemd unit is correct.
  template: src=beanstalkd.service dest=/etc/systemd/system/beanstalkd.service

- name: Ensure beanstalkd user exists.
  user: name={{ beanstalkd_user }} comment="Beanstalkd Server" createhome=no shell=/bin/false system=yes state=present

- name: Ensure persistence storage location exists and has proper ownership.
  file: path={{ beanstalkd_storage }} state=directory owner={{ beanstalkd_user }} group={{ beanstalkd_user }} recurse=true

- name: 'Ensure service is running, and is configured to start on boot.'
  service: name=beanstalkd enabled=yes state=started

- name: 'Ensure service is running, and is configured to start on boot.'
  service: name=beanstalkd enabled=yes state=restarted